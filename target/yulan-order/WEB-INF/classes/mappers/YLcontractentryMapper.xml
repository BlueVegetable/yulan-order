<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yulan.dao.YLcontractentryDao">

    <select id="getYLcBySate" resultType="HashMap">
        select count(*) nums ,state from ylcontractentry y where 1=1
        <if test="year!=null">
           and y.cyear=#{year}
        </if>
         group by state
    </select>

    <select id="getYLcbyStateandCID" resultType="HashMap">
        select
        *

        from(
        select rownum rm, a.* from(select  count(*) nums ,state,CID from ylcontractentry y where 1=1
        <if test="year!=null">
          and  y.cyear=#{year}
        </if>
        group by state, CID) a
        ) tm where rm &gt;= #{start} and rm &lt;= #{number }

    </select>

    <select id="count" resultType="int">
        select count (*) from (select * from ylcontractentry y where 1=1
        <if test="year!=null">
          and  y.cyear=#{year}
        </if>
         group by state ,CID)
    </select>

    <select id="getArea_code" resultType="String">
        select Area_code from customer where customer_code=#{CID}
    </select>

    <select id="getAreaName" resultType="String">
        select Area_name from Area_code where area_code=#{area_code,jdbcType=VARCHAR}
    </select>




    <select id="getCenter_mangerId" resultType="String">
        select center_manager from Area_owner where area_code=#{area_code,jdbcType=VARCHAR}  group by center_manager
    </select>

    <select id="getName" resultType="String">
        select t.name from HES_EMPLOYEE t where employee_no=#{owner,jdbcType=VARCHAR}
    </select>

    <select id="getAllStates" resultType="Map">
        select state from ylcontractentry group by state
    </select>

    <select id="getState" resultType="String">
        select state from ylcontractentry where  CID=#{CID}
        <if test="year!=null">
            and  cYear=#{year }
        </if>
        <if test="state!=null">
            and  state=#{state }
        </if>

    </select>


    <resultMap id="BaseResultMap" type="YLcontract_v2015" >
        <result column="CCYEAR" property="ccyear" jdbcType="DECIMAL" />
        <result column="CCID" property="ccid" jdbcType="VARCHAR" />
        <result column="A_RETAILING" property="aRetailing" jdbcType="DECIMAL" />
        <result column="B_ENGINEERING" property="bEngineering" jdbcType="DECIMAL" />
        <result column="C_MATCHING" property="cMatching" jdbcType="DECIMAL" />
        <result column="M1" property="m1" jdbcType="DECIMAL" />
        <result column="M2" property="m2" jdbcType="DECIMAL" />
        <result column="M3" property="m3" jdbcType="DECIMAL" />
        <result column="M4" property="m4" jdbcType="DECIMAL" />
        <result column="M5" property="m5" jdbcType="DECIMAL" />
        <result column="M6" property="m6" jdbcType="DECIMAL" />
        <result column="M7" property="m7" jdbcType="DECIMAL" />
        <result column="M8" property="m8" jdbcType="DECIMAL" />
        <result column="M9" property="m9" jdbcType="DECIMAL" />
        <result column="M10" property="m10" jdbcType="DECIMAL" />
        <result column="M11" property="m11" jdbcType="DECIMAL" />
        <result column="M12" property="m12" jdbcType="DECIMAL" />
        <result column="STOCKPERCENT" property="stockpercent" jdbcType="DECIMAL" />
        <result column="REWORDPERCENT" property="rewordpercent" jdbcType="DECIMAL" />
        <result column="PAYMINIMUM" property="payminimum" jdbcType="DECIMAL" />
        <result column="MEMO2" property="memo2" jdbcType="VARCHAR" />
        <result column="PREFEREDBRAND" property="preferedbrand" jdbcType="VARCHAR" />
        <result column="PRIVATE_ACCOUNT_AUTHED" property="privateAccountAuthed" jdbcType="VARCHAR" />
        <result column="REWORDPERCENT2" property="rewordpercent2" jdbcType="DECIMAL" />
    </resultMap>

    <resultMap id="YlContractentryResultMap" type="YlContractentry" >
        <result column="CYEAR" property="cyear" jdbcType="DECIMAL" />
        <result column="CID" property="cid" jdbcType="VARCHAR" />
        <result column="CNAME" property="cname" jdbcType="VARCHAR" />
        <result column="X_DISTRICT" property="xDistrict" jdbcType="VARCHAR" />
        <result column="X_AREA_DISTRICT_2" property="xAreaDistrict2" jdbcType="VARCHAR" />
        <result column="X_AREA_DISTRICT_3" property="xAreaDistrict3" jdbcType="VARCHAR" />
        <result column="START_DATE" property="startDate" jdbcType="TIMESTAMP" />
        <result column="END_DATE" property="endDate" jdbcType="TIMESTAMP" />
        <result column="TYPEID" property="typeid" jdbcType="VARCHAR" />
        <result column="TABLENAME" property="tablename" jdbcType="VARCHAR" />
        <result column="PAGENAME" property="pagename" jdbcType="VARCHAR" />
        <result column="STATE" property="state" jdbcType="VARCHAR" />
        <result column="WFMEMO" property="wfmemo" jdbcType="VARCHAR" />
        <result column="A_OWNER" property="aOwner" jdbcType="VARCHAR" />
        <result column="SIGNTS" property="signts" jdbcType="TIMESTAMP" />
        <result column="SIGNED" property="signed" jdbcType="DECIMAL" />
        <result column="LEGALCHECKED" property="legalchecked" jdbcType="DECIMAL" />
        <result column="RW_UPDATE" property="rwUpdate" jdbcType="VARCHAR" />
    </resultMap>

    <resultMap id="YLcontractHTMLMAP" type="com.yulan.pojo.YLcontractentryShow">
        <id column="ID" property="ID" />
        <result column="NAME" property="name" jdbcType="LONGVARBINARY"/>
        <result column="TEST" property="test" jdbcType="LONGVARBINARY"/>
    </resultMap>



    <select id="getYLcontract_v2015" parameterType="java.util.Map" resultType="YLcontract_v2015">
        select * from ( select * from YLCONTRACT_V2015 t where t.ccid=#{CCID} ORDER BY t.ccyear desc nulls last)WHERE ROWNUM =1
    </select>

    <select id="getYLcontract_v2015ByYear" parameterType="java.util.Map" resultType="YLcontract_v2015">
        select * from YLCONTRACT_V2015 t where t.ccid=#{CCID} and t.ccyear =#{CCYEAR}
    </select>

    <insert id="createYLcontract_v2015" parameterType="YLcontract_v2015" >
    insert into YLCONTRACT_V2015 (CCYEAR, CCID, A_RETAILING,
      B_ENGINEERING, C_MATCHING, M1,
      M2, M3, M4, M5,
      M6, M7, M8, M9,
      M10, M11, M12, STOCKPERCENT,
      REWORDPERCENT, PAYMINIMUM, MEMO2,
      PREFEREDBRAND, PRIVATE_ACCOUNT_AUTHED, REWORDPERCENT2
      )
    values (#{ccyear,jdbcType=DECIMAL}, #{ccid,jdbcType=VARCHAR}, #{aRetailing,jdbcType=DECIMAL},
      #{bEngineering,jdbcType=DECIMAL}, #{cMatching,jdbcType=DECIMAL}, #{m1,jdbcType=DECIMAL},
      #{m2,jdbcType=DECIMAL}, #{m3,jdbcType=DECIMAL}, #{m4,jdbcType=DECIMAL}, #{m5,jdbcType=DECIMAL},
      #{m6,jdbcType=DECIMAL}, #{m7,jdbcType=DECIMAL}, #{m8,jdbcType=DECIMAL}, #{m9,jdbcType=DECIMAL},
      #{m10,jdbcType=DECIMAL}, #{m11,jdbcType=DECIMAL}, #{m12,jdbcType=DECIMAL}, #{stockpercent,jdbcType=DECIMAL},
      #{rewordpercent,jdbcType=DECIMAL}, #{payminimum,jdbcType=DECIMAL}, #{memo2,jdbcType=VARCHAR},
      #{preferedbrand,jdbcType=VARCHAR}, #{privateAccountAuthed,jdbcType=VARCHAR}, #{rewordpercent2,jdbcType=DECIMAL}
      )
  </insert>

    <insert id="createYLcontractentry" parameterType="YLcontractentry">
    insert into YLCONTRACTENTRY (CYEAR, CID, CNAME,
      X_DISTRICT, X_AREA_DISTRICT_2, X_AREA_DISTRICT_3,
      START_DATE, END_DATE, TYPEID,
      TABLENAME, PAGENAME, STATE,
      WFMEMO, A_OWNER, SIGNTS,
      SIGNED, LEGALCHECKED, RW_UPDATE
      )
    values (#{cyear,jdbcType=DECIMAL}, #{cid,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR},
      #{xDistrict,jdbcType=VARCHAR}, #{xAreaDistrict2,jdbcType=VARCHAR}, #{xAreaDistrict3,jdbcType=VARCHAR},
      #{startDate,jdbcType=TIMESTAMP}, #{endDate,jdbcType=TIMESTAMP}, #{typeid,jdbcType=VARCHAR},
      #{tablename,jdbcType=VARCHAR}, #{pagename,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR},
      #{wfmemo,jdbcType=VARCHAR}, #{aOwner,jdbcType=VARCHAR}, #{signts,jdbcType=TIMESTAMP},
      #{signed,jdbcType=DECIMAL}, #{legalchecked,jdbcType=DECIMAL}, #{rwUpdate,jdbcType=VARCHAR}
      )
  </insert>

    <update id="updateYLcontractentry" parameterType="YLcontractentry">
        update YLCONTRACTENTRY
        <set>
            <if test="cyear!=null">
                CYEAR = #{cyear} ,
            </if>
            <if test="startDate!=null">
                START_DATE = #{startDate,jdbcType=TIMESTAMP} ,
            </if>
            <if test="endDate!=null">
                END_DATE = #{endDate,jdbcType=TIMESTAMP}
            </if>
        </set>
        where CID = #{cid} AND  CYEAR = #{cyear}
    </update>

    <update id="updateYLcontract_v2015" parameterType="YLcontract_v2015">
        update YLCONTRACT_V2015
        <set>
            <if test="aRetailing!=null">
                A_RETAILING = #{aRetailing,jdbcType=DECIMAL} ,
            </if>
            <if test="bEngineering!=null">
                B_ENGINEERING = #{bEngineering,jdbcType=DECIMAL},
            </if>
            <if test="cMatching!=null">
                C_MATCHING = #{cMatching,jdbcType=DECIMAL},
            </if>
            <if test="m1!=null">
                M1 = #{m1,jdbcType=DECIMAL},
            </if>
            <if test="m2!=null">
                M2 = #{m2,jdbcType=DECIMAL},
            </if>
            <if test="m3!=null">
                M3 = #{m3,jdbcType=DECIMAL},
            </if>
            <if test="m4!=null">
                M4 = #{m4,jdbcType=DECIMAL},
            </if>
            <if test="m5!=null">
                M5 = #{m5,jdbcType=DECIMAL},
            </if>
            <if test="m6!=null">
                M6 = #{m6,jdbcType=DECIMAL},
            </if>
            <if test="m7!=null">
                M7 = #{m7,jdbcType=DECIMAL},
            </if>
            <if test="m8!=null">
                M8 = #{m8,jdbcType=DECIMAL},
            </if>
            <if test="m9!=null">
                M9 = #{m9,jdbcType=DECIMAL},
            </if>
            <if test="m10!=null">
                M10 = #{m10,jdbcType=DECIMAL},
            </if>
            <if test="m11!=null">
                M11 = #{m11,jdbcType=DECIMAL},
            </if>
            <if test="m12!=null">
                M12 = #{m12,jdbcType=DECIMAL},
            </if>
            <if test="stockpercent!=null">
                STOCKPERCENT = #{stockpercent,jdbcType=DECIMAL},
            </if>
            <if test="rewordpercent!=null">
                REWORDPERCENT = #{rewordpercent,jdbcType=DECIMAL},
            </if>
            <if test="payminimum!=null">
                PAYMINIMUM = #{payminimum,jdbcType=DECIMAL},
            </if>
            <if test="memo2!=null">
                MEMO2 = #{memo2,jdbcType=VARCHAR},
            </if>
            <if test="preferedbrand!=null">
                PREFEREDBRAND = #{preferedbrand,jdbcType=VARCHAR},
            </if>
            <if test="privateAccountAuthed!=null">
                PRIVATE_ACCOUNT_AUTHED = #{privateAccountAuthed,jdbcType=VARCHAR},
            </if>
            <if test="rewordpercent2!=null">
                REWORDPERCENT2 = #{rewordpercent2,jdbcType=DECIMAL}
            </if>
        </set>
        where CCID = #{ccid} AND  CCYEAR = #{ccyear}
    </update>

    <select id="getYLcontractHTML" parameterType="java.util.Map" resultMap="YLcontractHTMLMAP">
        select TEST from YLCONTRACTENTRY_SHOW WHERE ID =#{ID}
    </select>

    <select id="getYLcontractentry" parameterType="java.util.Map" resultType="YLcontractentry">
        select * from ( select * from YLCONTRACTENTRY t where t.cid=#{CID} ORDER BY t.cyear desc nulls last)WHERE ROWNUM =1
    </select>

    <select id="getYLcontractentryByYear" parameterType="java.util.Map" resultType="YLcontractentry">
        select * from YLCONTRACTENTRY t where t.cid=#{CID} and t.cyear = #{CYEAR}
    </select>

    <select id="getYLcontractentryLegalChecked" parameterType="java.util.Map" resultType="YLcontractentry">
        select * from(
        select rownum rm, c.*  from
        (
        select * from YLCONTRACTENTRY
        <if test="LEGALCHECKED !=null">
            where LEGALCHECKED = #{LEGALCHECKED}
        </if>
        <if test="STATE !=null">
            and STATE = #{STATE,jdbcType=VARCHAR}
        </if>
            and CYEAR = #{CYEAR}
        ) c)tm
        <if test="start!=null">
            where rm &gt;= #{start} and rm &lt;= #{number}
        </if>
    </select>

    <select id="getYLcontractentryLegalCheckedSingle" parameterType="java.util.Map" resultType="YLcontractentry">
        select * from(
        select rownum rm, c.*  from
        (
        select * from YLCONTRACTENTRY
        <if test="LEGALCHECKED !=null">
            where LEGALCHECKED = #{LEGALCHECKED}
        </if>
        <if test="STATE !=null">
            and STATE = #{STATE,jdbcType=VARCHAR}
        </if>
        and CYEAR = #{CYEAR} and CID = #{CID}
        ) c)tm
        <if test="start!=null">
            where rm &gt;= #{start} and rm &lt;= #{number}
        </if>
    </select>

    <select id="getAllYlcs" resultMap="YlContractentryResultMap">
        select * from(
        select rownum rm, c.*  from YLCONTRACTENTRY c where 1=1
        <if test="signed!=null">
            and c.signed = #{signed}
        </if>
        ) tm
        <if test="start!=null">
            where rm &gt;= #{start} and rm &lt;= #{number }
        </if>
    </select>
    <select id="countYlcs" resultType="int">
        select count(*) from YLCONTRACTENTRY
        <if test="signed!=null">
            and c.signed = #{signed}
        </if>
    </select>

    <update id="checkYLcontractentry" parameterType="java.util.Map">
        update YLCONTRACTENTRY
        <set>
            <if test="STATE!=null">
        STATE = #{STATE,jdbcType=VARCHAR},
            </if>
            <if test="WFMEMO!=null">
        WFMEMO = WFMEMO || #{WFMEMO,jdbcType=VARCHAR},
            </if>
            <if test="SIGNED!=null">
        SIGNED = #{SIGNED},
            </if>
            <if test="market!=null">
        MARKETCHECK = #{market,jdbcType=VARCHAR},
            </if>
            <if test="csa!=null">
        CSA = #{csa,jdbcType=VARCHAR},
            </if>
        </set>
        where CID = #{CID} AND CYEAR = (select CYEAR from ( select * from YLCONTRACTENTRY t where t.cid=#{CID} ORDER BY t.cyear desc nulls last)WHERE ROWNUM =1)
    </update>

    <update id="lawCheckYLcontractentryState" parameterType="java.util.Map">
        update YLCONTRACTENTRY
        <set>
            <if test="STATE!=null">
                STATE = #{STATE} ,
            </if>
            <if test="WFMEMO!=null">
                WFMEMO = WFMEMO || #{WFMEMO,jdbcType=VARCHAR},
            </if>
            <if test="SIGNED!=null">
                SIGNED = #{SIGNED},
            </if>
            <if test="LEGALCHECKED!=null">
                LEGALCHECKED = #{LEGALCHECKED}
            </if>
        </set>
        where CID = #{CID} AND CYEAR = (select CYEAR from ( select * from YLCONTRACTENTRY t where t.cid=#{CID} ORDER BY t.cyear desc nulls last)WHERE ROWNUM =1)
    </update>

    <select id="getAllYs" resultType="Map">
        select
        *
        from(
        select rownum rm, l.*  from
        /*没有片区经理面名字submarketmanagername*/
        (select w.realname Mname ,f.* from
        (select c.marketname,c.marketmanager,c.submarketname,c.submarketmanager,c.submarketmanagername, c.marketmanagername,t.* from
        YLCONTRACTENTRY t,customerinfocard c
        where t.cid=c.cid and t.cyear=c.contractyear )f,web_user w
        where
        w.loginname=f.MARKETMANAGER) l

        where 1=1
        <if test="year!=null">
            and cyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        and state in
        <foreach collection="states" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


        ) tm      where rm &gt;= #{start} and rm &lt;= #{number }
    </select>
    <select id="getAllys_LEGALCHECK " resultType="Map">
        select
        *

        from(
        select rownum rm, l.*  from

        (select u.realName Sname,s.* from
        (select w.realname Mname ,f.* from
        (select c.marketname,c.marketmanager,c.submarketname,c.submarketmanager,c.submarketmanagername, c.marketmanagername,t.* from
        YLCONTRACTENTRY t,customerinfocard c
        where t.cid=c.cid )f,web_user w
        where
        w.loginname=f.MARKETMANAGER)s,web_user u
        where
        u.loginName=s.SUBMARKETMANAGER ) l

        where 1=1
        <if test="year!=null">
            and cyear=#{year}
        </if>


        <if test="legalchecked!=null">
            and legalchecked=#{legalchecked}
        </if>



        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


        ) tm      where rm &gt;= #{start} and rm &lt;= #{number}

    </select>
    <select id="count_LEGALCHECK" resultType="int">
        select count (*) from
        (select u.realName Sname,s.* from
        (select w.realname Mname ,f.* from
        (select c.marketname,c.marketmanager,c.submarketname,c.submarketmanager,c.submarketmanagername, c.marketmanagername,t.* from
        YLCONTRACTENTRY t,customerinfocard c
        where t.cid=c.cid )f,web_user w
        where
        w.loginname=f.MARKETMANAGER)s,web_user u
        where
        u.loginName=s.SUBMARKETMANAGER )l
        where 1=1
        <if test="year!=null">
            and cyear=#{year}
        </if>
        <if test="legalchecked!=null">
            and legalchecked=#{legalchecked}
        </if>

        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


    </select>

    <select id="countYs" resultType="int">
        select count (*) from
          (select c.marketname,c.marketmanager,c.submarketname,c.submarketmanager,c.submarketmanagername, c.marketmanagername,t.* from
        YLCONTRACTENTRY t,customerinfocard c
        where t.cid=c.cid and t.cyear=c.contractyear)f
        where 1=1
        <if test="year!=null">
            and cyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        and state in
        <foreach collection="states" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>

        <if test="find!=null">
           and f.cid like  '%'||#{find}||'%' or  f.CNAME like  '%'||#{find}||'%'
        </if>

    </select>

    <select id="getAllys_area" resultType="Map">
        select
        *

        from(
        select rownum rm, l.*  from

        ( select * from
        (select a.area_belong,f.* from
        (select c.market, c.marketname,c.marketmanager,c.submarketname,c.submarketmanager,c.submarketmanagername, c.marketmanagername,t.* from
        YLCONTRACTENTRY t,customerinfocard c
        where t.cid=c.cid ) f,AREA_CODE a where f.market=a.area_code)e,(select area from area_owner w where w.owner=#{cid} and w.position=#{position} ) k
        where e.area_belong=k.area ) l

        where 1=1
        <if test="year!=null">
            and cyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>
        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


        ) tm      where rm &gt;= #{start} and rm &lt;= #{number }
    </select>
    <select id="countYs_area" resultType="int">
        select count (*) from
        ( select * from
        (select a.area_belong,f.* from
        (select c.market, c.marketname,c.marketmanager,c.submarketname,c.submarketmanager,c.submarketmanagername, c.marketmanagername,t.* from
        YLCONTRACTENTRY t,customerinfocard c
        where t.cid=c.cid ) f,AREA_CODE a where f.market=a.area_code)e,(select area from area_owner w where w.owner=#{cid} and w.position=#{position} ) k
        where e.area_belong=k.area )f
        where 1=1
        <if test="year!=null">
            and cyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>

        <if test="find!=null">
            and f.cid like  '%'||#{find}||'%' or  f.CNAME like  '%'||#{find}||'%'
        </if>

    </select>

    <select id="getAllys_areaOver" resultType="Map">
        select
        *

        from(
        select rownum rm, l.*  from

        ( select * from

        (select a.area_belong,c.market, c.marketname,c.marketmanagername,c.submarketname,c.submarketmanagername,t.* from
        YLCONTRACTENTRY t,customerinfocard c,AREA_CODE a
        where t.cid=c.cid and c.market=a.area_code and t.cyear=c.contractyear ) e,(select area from area_owner w where w.owner=#{cid} and w.position=#{position} ) k
        where e.area_belong=k.area) l


        where 1=1
        <if test="year!=null">
            and cyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>

            and state in
                <foreach collection="states" index="index" item="item" open="(" separator="," close=")">
                                    #{item}
                </foreach>

        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


        ) tm      where rm &gt;= #{start} and rm &lt;= #{number }
    </select>
    <select id="countYs_areaOver" resultType="int">
        select count (*) from
        ( select * from

        (select a.area_belong,c.market, c.marketname,c.marketmanager,c.submarketname,c.submarketmanager,t.* from
        YLCONTRACTENTRY t,customerinfocard c,AREA_CODE a
        where t.cid=c.cid and c.market=a.area_code and t.cyear=c.contractyear ) e,(select area from area_owner w where w.owner=#{cid} and w.position=#{position} ) k
        where e.area_belong=k.area)f
        where 1=1
        <if test="year!=null">
            and cyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        and state in
            <foreach collection="states" index="index" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>

        <if test="find!=null">
            and f.cid like  '%'||#{find}||'%' or  f.CNAME like  '%'||#{find}||'%'
        </if>

    </select>

    <select id="getAllYLcontractentryState" resultType="Map">
        select STATE,count(STATE) from  YLCONTRACTENTRY where CYEAR = #{CYEAR} group by STATE
    </select>

    <select id="getYLcontractentryStateByArea" resultType="Map">
        select marketname,marketmanagername,state,count(state)
        from (select c.marketname,c.marketmanagername, t.state,c.contractyear from YLCONTRACTENTRY t,customerinfocard c where t.cid=c.cid)f
        where contractyear=#{CYEAR} group by marketname,marketmanagername,state
    </select>

    <update id="getAPPVersion" parameterType="String">
        update YLCONTRACTENTRY_SHOW t
        <set>
            <if test="VERSION!=null">
                NAME = #{VERSION,jdbcType=VARCHAR}
            </if>
        </set>
        where ID = 2
    </update>

    <select id="getAPPVersionPresent" resultType="String">
        select t.name from YLCONTRACTENTRY_SHOW t where ID = 2
    </select>

</mapper>
