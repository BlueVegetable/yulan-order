<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yulan.dao.CustomerInfoDao">
    <resultMap id="CustomerInfoMap" type="CustomerInfoCard" >
        <result column="CID" property="cID" />
    </resultMap>
    <resultMap id="CustomerInfoCardMap" type="com.yulan.pojo.CustomerInfoCard" >
        <result column="GROUPID" property="groupid" jdbcType="VARCHAR" />
        <result column="DELETED" property="deleted" jdbcType="DECIMAL" />
        <result column="ERPCOPYED" property="erpcopyed" jdbcType="DECIMAL" />
        <result column="CONTRACTYEAR" property="contractyear" jdbcType="DECIMAL" />
        <result column="CID" property="cid" jdbcType="VARCHAR" />
        <result column="CNAME" property="cname" jdbcType="VARCHAR" />
        <result column="MARKET" property="market" jdbcType="VARCHAR" />
        <result column="MARKETNAME" property="marketname" jdbcType="VARCHAR" />
        <result column="SUBMARKET" property="submarket" jdbcType="VARCHAR" />
        <result column="SUBMARKETNAME" property="submarketname" jdbcType="VARCHAR" />
        <result column="MARKETMANAGER" property="marketmanager" jdbcType="VARCHAR" />
        <result column="MARKETMANAGERNAME" property="marketmanagername" jdbcType="VARCHAR" />
        <result column="SUBMARKETMANAGER" property="submarketmanager" jdbcType="VARCHAR" />
        <result column="SUBMARKETMANAGERNAME" property="submarketmanagername" jdbcType="VARCHAR" />
        <result column="MANAGERPOSITION" property="managerposition" jdbcType="VARCHAR" />
        <result column="X_DISTRICT" property="xDistrict" jdbcType="VARCHAR" />
        <result column="X_AREA_DISTRICT_2" property="xAreaDistrict2" jdbcType="VARCHAR" />
        <result column="X_AREA_DISTRICT_3" property="xAreaDistrict3" jdbcType="VARCHAR" />
        <result column="DISTRICT_TEXT" property="districtText" jdbcType="VARCHAR" />
        <result column="AREA_DISTRICT_2_TEXT" property="areaDistrict2Text" jdbcType="VARCHAR" />
        <result column="AREA_DISTRICT_3_TEXT" property="areaDistrict3Text" jdbcType="VARCHAR" />
        <result column="X_JURIDIC_PERSON" property="xJuridicPerson" jdbcType="VARCHAR" />
        <result column="JURIDIC_PERSON_HANDSET" property="juridicPersonHandset" jdbcType="VARCHAR" />
        <result column="X_OFFICE_TEL" property="xOfficeTel" jdbcType="VARCHAR" />
        <result column="X_HANDSET" property="xHandset" jdbcType="VARCHAR" />
        <result column="X_EMAIL" property="xEmail" jdbcType="VARCHAR" />
        <result column="X_FAX" property="xFax" jdbcType="VARCHAR" />
        <result column="QQ" property="qq" jdbcType="VARCHAR" />
        <result column="X_POST_ADDRESS" property="xPostAddress" jdbcType="VARCHAR" />
        <result column="X_ZIP_CODE" property="xZipCode" jdbcType="VARCHAR" />
        <result column="X_OFFICE_TEL_1" property="xOfficeTel1" jdbcType="VARCHAR" />
        <result column="X_HANDSET_2" property="xHandset2" jdbcType="VARCHAR" />
        <result column="X_DELIVERY_ADRESS" property="xDeliveryAdress" jdbcType="VARCHAR" />
        <result column="FAX_WL" property="faxWl" jdbcType="VARCHAR" />
        <result column="ZIP_CODE_WL" property="zipCodeWl" jdbcType="VARCHAR" />
        <result column="TX_AGENT_NAME" property="txAgentName" jdbcType="VARCHAR" />
        <result column="WL_AGENT_NAME" property="wlAgentName" jdbcType="VARCHAR" />
        <result column="PREFEREDBRAND" property="preferedbrand" jdbcType="VARCHAR" />
        <result column="CURRENT_PRODUCT" property="currentProduct" jdbcType="VARCHAR" />
        <result column="SHOP_AREA" property="shopArea" jdbcType="DECIMAL" />
        <result column="INVOICE_TYPE" property="invoiceType" jdbcType="VARCHAR" />
        <result column="IS_GENERALTAXPAYER" property="isGeneraltaxpayer" jdbcType="VARCHAR" />
        <result column="ACCOUNT1_NAME" property="account1Name" jdbcType="VARCHAR" />
        <result column="ACCOUNT1_BANK" property="account1Bank" jdbcType="VARCHAR" />
        <result column="ACCOUNT1" property="account1" jdbcType="VARCHAR" />
        <result column="ACCOUNT2_NAME" property="account2Name" jdbcType="VARCHAR" />
        <result column="ACCOUNT2_BANK" property="account2Bank" jdbcType="VARCHAR" />
        <result column="ACCOUNT2" property="account2" jdbcType="VARCHAR" />
        <result column="ACCOUNT3_NAME" property="account3Name" jdbcType="VARCHAR" />
        <result column="ACCOUNT3_BANK" property="account3Bank" jdbcType="VARCHAR" />
        <result column="ACCOUNT3" property="account3" jdbcType="VARCHAR" />
        <result column="FILE_1_IDCARD" property="file1Idcard" jdbcType="VARCHAR" />
        <result column="FILE_1_OP" property="file1Op" jdbcType="VARCHAR" />
        <result column="FILE_2_BUSINESSLICENSE" property="file2Businesslicense" jdbcType="VARCHAR" />
        <result column="FILE_2_OP" property="file2Op" jdbcType="VARCHAR" />
        <result column="FILE_3_ORGCODE" property="file3Orgcode" jdbcType="VARCHAR" />
        <result column="FILE_3_OP" property="file3Op" jdbcType="VARCHAR" />
        <result column="FILE_4_GTQC" property="file4Gtqc" jdbcType="VARCHAR" />
        <result column="FILE_4_OP" property="file4Op" jdbcType="VARCHAR" />
        <result column="STATE" property="state" jdbcType="VARCHAR" />
        <result column="MEMO" property="memo" jdbcType="VARCHAR" />
        <result column="FILE_5_IDCARD_BG" property="file5IdcardBg" jdbcType="VARCHAR" />
        <result column="FILE_5_OP" property="file5Op" jdbcType="VARCHAR" />
        <result column="BUSIENT_TYPE" property="busientType" jdbcType="VARCHAR" />
        <result column="ACCOUNT1_LOCATION" property="account1Location" jdbcType="VARCHAR" />
        <result column="ACCOUNT2_LOCATION" property="account2Location" jdbcType="VARCHAR" />
        <result column="FILE_1_IDCARD_NO" property="file1IdcardNo" jdbcType="VARCHAR" />
        <result column="FILE_2_BUSINESSLICENSE_NO" property="file2BusinesslicenseNo" jdbcType="VARCHAR" />
        <result column="FILE_2_BUSINESSLICENSE_END" property="file2BusinesslicenseEnd" jdbcType="VARCHAR" />
        <result column="FILE_3_ORGCODE_NO" property="file3OrgcodeNo" jdbcType="VARCHAR" />
        <result column="FILE_4_GTQC_NO" property="file4GtqcNo" jdbcType="VARCHAR" />
        <result column="ACCOUNT1_MEMO" property="account1Memo" jdbcType="VARCHAR" />
        <result column="ACCOUNT2_MEMO" property="account2Memo" jdbcType="VARCHAR" />
        <result column="FLAG" property="flag" jdbcType="VARCHAR" />
        <result column="FILE_2_BUSINESSLICENSE_NOEND" property="file2BusinesslicenseNoend" jdbcType="DECIMAL" />
        <result column="HAS_PUBLIC_ACCOUNT" property="hasPublicAccount" jdbcType="VARCHAR" />
        <result column="UPDATE_FLAG" property="updateFlag" jdbcType="VARCHAR" />
        <result column="SYS_2017_STATE_CHANGE_OLD" property="sys2017StateChangeOld" jdbcType="VARCHAR" />
        <result column="SYS_2017_STATE_CHANGE_LOG" property="sys2017StateChangeLog" jdbcType="VARCHAR" />
        <result column="SYS_2017_STATE_CHANGE_TS" property="sys2017StateChangeTs" jdbcType="TIMESTAMP" />
        <result column="INV_ADDRESS" property="invAddress" jdbcType="VARCHAR" />
        <result column="INV_TELEPHONE" property="invTelephone" jdbcType="VARCHAR" />
        <result column="INV_BANKNAME" property="invBankname" jdbcType="VARCHAR" />
        <result column="INV_BANMACCOUNT" property="invBanmaccount" jdbcType="VARCHAR" />
        <result column="INV_REQUIREMENT" property="invRequirement" jdbcType="VARCHAR" />
        <result column="INV_REQUIREMENT_TS" property="invRequirementTs" jdbcType="TIMESTAMP" />
        <result column="INV_REQUIREMENT_LIST" property="invRequirementList" jdbcType="VARCHAR" />
        <result column="INV_NOTNEED_TS" property="invNotneedTs" jdbcType="TIMESTAMP" />
        <result column="INV_NOTNEED_IP" property="invNotneedIp" jdbcType="VARCHAR" />
        <result column="CUSTOMERENTITYTYPEX" property="customerentitytypex" jdbcType="CHAR" />
        <result column="LEGALCHECKED" property="legalchecked" jdbcType="DECIMAL" />
        <result column="CNAME_NEW" property="cnameNew" jdbcType="VARCHAR" />
        <result column="RECIPE_TARGET_MB" property="recipeTargetMb" jdbcType="VARCHAR" />
        <result column="VAT_INVOICE_FLAG" property="vatInvoiceFlag" jdbcType="VARCHAR" />
    </resultMap>
    <resultMap id="YLcontractMap" type="com.yulan.pojo.YLcontract_v2015_paa" >
        <result column="CCYEAR" property="ccyear" jdbcType="DECIMAL" />
        <result column="CCID" property="ccid" jdbcType="VARCHAR" />
        <result column="NAME" property="name" jdbcType="VARCHAR" />
        <result column="ACCOUNT_BANK" property="accountBank" jdbcType="VARCHAR" />
        <result column="ACCOUT" property="accout" jdbcType="VARCHAR" />
        <result column="ACCOUNT_LOCATION" property="accountLocation" jdbcType="VARCHAR" />
        <result column="AUTHFILE_IAMGE" property="authfileIamge" jdbcType="VARCHAR" />
        <result column="IDCARD_IAMGE1" property="idcardIamge1" jdbcType="VARCHAR" />
        <result column="IDCARD_IAMGE2" property="idcardIamge2" jdbcType="VARCHAR" />
        <result column="IDCARD_NO" property="idcardNo" jdbcType="VARCHAR" />
    </resultMap>

    <select id="getAllinfo" resultMap="CustomerInfoCardMap">
        select * from(
        select rownum rm, c.*  from CUSTOMERINFOCARD c where 1=1

        <if test="year!=null">
            and c.contractyear = #{year}
        </if>
        <if test="state!=null">
            and c.state=#{state}
        </if>
        <if test="find!=null">
            and c.cid like  '%'||#{find}||'%' or c.cname like '%'||#{find}||'%'
        </if>
        <if test="area_1!=null">
            and c.marketname=#{area_1}
        </if>
        <if test="area_2!=null">
            and c.submarketname=#{area_2}
        </if>

        ) tm
        <if test="start!=null">
          where rm &gt;= #{start} and rm &lt;= #{number}
        </if>
    </select>
    
    <select id="getInfoandYlc" resultType="Map">
        select * from(
        select rownum rm, c.*  from

          (select a.*,b.state bstate from customerinfocard a,ylcontractentry b where a.cid =b.cid and a.contractyear=b.cyear)c

        where 1=1

        <if test="infoState!=null">
            and c.state=#{infoState}
        </if>
        <if test="ylcState!=null">
            and c.bstate=#{ylcState}
        </if>
        <if test="find!=null">
            and c.cid like  '%'||#{find}||'%'
        </if>
        <if test="year!=null">
            and c.contractyear=#{year}
        </if>

        ) tm
        <if test="start!=null">
            where rm &gt;= #{start} and rm &lt;= #{number }
        </if>




    </select>

    <select id="countInfoandYlc" resultType="int">
         select count(*) from
        (select a.*,b.state bstate from customerinfocard a,ylcontractentry b where a.cid =b.cid and a.contractyear=b.cyear)c
          where 1=1
        <if test="infoState!=null">
            and c.state=#{infoState}
        </if>
        <if test="ylcState!=null">
            and c.bstate=#{ylcState}
        </if>
        <if test="find!=null">
            and c.cid like  '%'||#{find}||'%'
        </if>
        <if test="year!=null">
            and c.contractyear=#{year}
        </if>
    </select>





    <select id="getInfobyStateandmarketName" resultType="HashMap">
        select
        *
        from(
        select rownum rm, a.*from(select  count(*) nums ,state, marketName,SUBMARKETMANAGERNAME
        from CUSTOMERINFOCARD c where 1=1
        <if test="year!=null">
            and c.contractyear=#{year}
        </if>
         group by state , marketName,SUBMARKETMANAGERNAME) a
        ) tm where rm &gt;= #{start} and rm &lt;= #{number }

    </select>

    <select id="getInfoBySate" resultType="HashMap" parameterType="String">
        select count(*) nums ,state from CUSTOMERINFOCARD c where 1=1
        <if test="year!=null">
           and c.contractyear=#{year}
        </if>
        group by state
    </select>

    <select id="count" resultType="int" parameterType="String">
        select count (*) from (select * from CUSTOMERINFOCARD c where 1=1
        <if test="year!=null">
            and c.contractyear=#{year}
        </if>
        group by state , marketName,SUBMARKETMANAGERNAME)
    </select>

    <select id="getAllStates" resultType="Map">
        select state from CUSTOMERINFOCARD group by state
    </select>

    <select id="countInfo" resultType="int">
        select count(*) from CUSTOMERINFOCARD c where 1=1
        <if test="year!=null">
            and c.contractyear = #{year}
        </if>
        <if test="state!=null">
            and c.state=#{state}
        </if>
        <if test="find!=null">
            and c.cid like  '%'||#{find}||'%' or c.cname like '%'||#{find}||'%'
        </if>

    </select>

    <select id="getCustomerInfo" parameterType="java.util.Map" resultType="CustomerInfoCard">
        select * from ( select * from CUSTOMERINFOCARD t where t.cid=#{CID,jdbcType=VARCHAR} ORDER BY t.contractyear desc nulls last)WHERE ROWNUM =1
    </select>

    <select id="getCustomerInfoByYear" parameterType="java.util.Map" resultType="CustomerInfoCard">
        select * from CUSTOMERINFOCARD t where t.cid=#{CID,jdbcType=VARCHAR} and t.contractyear = #{YEAR}
    </select>

    <select id="getCustomerInfoByMarketName" parameterType="java.util.Map" resultType="CustomerInfoCard">
        select * from CUSTOMERINFOCARD t
        <if test="marketname != null">
        where t.marketname=#{marketname,jdbcType=VARCHAR}
        </if>
        <if test="submarketname != null">
            and t.submarketname = #{submarketname,jdbcType=VARCHAR}
        </if>
        and t.contractyear = #{YEAR}
    </select>

    <select id="getYLcontract" parameterType="java.util.Map" resultType="YLcontract_v2015_paa">
        select * from ( select * from YLCONTRACT_V2015_PAA t where t.ccid=#{CCID,jdbcType=VARCHAR} ORDER BY t.ccyear desc nulls last)WHERE ROWNUM =1
    </select>

    <select id="getYLcontractByYear" parameterType="java.util.Map" resultType="YLcontract_v2015_paa">
        select * from YLCONTRACT_V2015_PAA t where t.ccid=#{CCID,jdbcType=VARCHAR} and t.ccyear = #{CCYEAR}
    </select>

    <update id="updateCustomerInfo" parameterType="CustomerInfoCard">
        update CUSTOMERINFOCARD
        <set>
            <if test="preferedbrand != null">
        PREFEREDBRAND = #{preferedbrand,jdbcType=VARCHAR},
            </if>
            <if test="currentProduct != null">
        CURRENT_PRODUCT = #{currentProduct,jdbcType=VARCHAR},
            </if>
            <if test="invoiceType != null">
        INVOICE_TYPE = #{invoiceType,jdbcType=VARCHAR},
            </if>
            <if test="shopArea != 0">
        SHOP_AREA = #{shopArea},
            </if>
            <if test="juridicPersonHandset != null">
        JURIDIC_PERSON_HANDSET = #{juridicPersonHandset,jdbcType=VARCHAR},
            </if>
            <if test="recipeTargetMb != null">
        RECIPE_TARGET_MB = #{recipeTargetMb,jdbcType=VARCHAR},
            </if>
            <if test="invAddress != null">
        INV_ADDRESS = #{invAddress,jdbcType=VARCHAR},
            </if>
            <if test="invTelephone != null">
        INV_TELEPHONE = #{invTelephone,jdbcType=VARCHAR},
            </if>
            <if test="invBankname != null">
        INV_BANKNAME = #{invBankname,jdbcType=VARCHAR},
            </if>
            <if test="invBanmaccount!= null">
        INV_BANMACCOUNT = #{invBanmaccount,jdbcType=VARCHAR},
            </if>
            <if test="qq != null">
        QQ = #{qq,jdbcType=VARCHAR},
            </if>
            <if test="xFax != null">
        X_FAX = #{xFax,jdbcType=VARCHAR},
            </if>
            <if test="xEmail != null">
        X_EMAIL = #{xEmail,jdbcType=VARCHAR},
            </if>
            <if test="xZipCode != null">
        X_ZIP_CODE = #{xZipCode,jdbcType=VARCHAR},
            </if>
            <if test="faxWl != null">
        FAX_WL = #{faxWl,jdbcType=VARCHAR},
            </if>
            <if test="zipCodeWl != null">
        ZIP_CODE_WL = #{zipCodeWl,jdbcType=VARCHAR},
            </if>
            <if test="hasPublicAccount != null">
        HAS_PUBLIC_ACCOUNT = #{hasPublicAccount,jdbcType=VARCHAR},
            </if>
            <if test="account1Bank != null">
        ACCOUNT1_BANK = #{account1Bank,jdbcType=VARCHAR},
            </if>
            <if test="account1 != null">
        ACCOUNT1 = #{account1,jdbcType=VARCHAR},
            </if>
            <if test="account1Location != null">
        ACCOUNT1_LOCATION = #{account1Location,jdbcType=VARCHAR},
            </if>
            <if test="account2Bank != null">
        ACCOUNT2_BANK = #{account2Bank,jdbcType=VARCHAR},
            </if>
            <if test="account2 != null">
        ACCOUNT2 = #{account2,jdbcType=VARCHAR},
            </if>
            <if test="account2Location != null">
        ACCOUNT2_LOCATION = #{account2Location,jdbcType=VARCHAR},
            </if>
            <if test="busientType != null">
                BUSIENT_TYPE = #{busientType,jdbcType=VARCHAR},
            </if>
            <if test="customerentitytypex != null">
        CUSTOMERENTITYTYPEX = #{customerentitytypex,jdbcType=CHAR},
            </if>
            <if test="file1Idcard != null">
        FILE_1_IDCARD = #{file1Idcard,jdbcType=VARCHAR},
            </if>
            <if test="file1IdcardNo != null">
                FILE_1_IDCARD_NO = #{file1IdcardNo,jdbcType=VARCHAR},
            </if>
            <if test="file1Op != null">
        FILE_1_OP = #{file1Op,jdbcType=VARCHAR},
            </if>
            <if test="file2Businesslicense != null">
        FILE_2_BUSINESSLICENSE = #{file2Businesslicense,jdbcType=VARCHAR},
            </if>
            <if test="file2BusinesslicenseNo != null">
        FILE_2_BUSINESSLICENSE_NO = #{file2BusinesslicenseNo,jdbcType=VARCHAR},
            </if>
            <if test="file2BusinesslicenseEnd != null">
        FILE_2_BUSINESSLICENSE_END = #{file2BusinesslicenseEnd,jdbcType=VARCHAR},
            </if>
            <if test="file2BusinesslicenseNoend != null">
        FILE_2_BUSINESSLICENSE_NOEND  = #{file2BusinesslicenseNoend},
            </if>
            <if test="file2Op != null">
        FILE_2_OP = #{file2Op,jdbcType=VARCHAR},
            </if>
            <if test="file4Gtqc != null">
        FILE_4_GTQC = #{file4Gtqc,jdbcType=VARCHAR},
            </if>
            <if test="file4Op != null">
        FILE_4_OP = #{file4Op,jdbcType=VARCHAR},
            </if>
            <if test="file4GtqcNo != null">
        FILE_4_GTQC_NO = #{file4GtqcNo,jdbcType=VARCHAR},
            </if>
            <if test="file5IdcardBg != null">
        FILE_5_IDCARD_BG = #{file5IdcardBg,jdbcType=VARCHAR},
            </if>
            <if test="file5Op != null">
        FILE_5_OP = #{file5Op,jdbcType=VARCHAR},
            </if>
            <if test="vatInvoiceFlag != null">
        VAT_INVOICE_FLAG = #{vatInvoiceFlag,jdbcType=VARCHAR}
            </if>
        </set>
        where CID = #{cid,jdbcType=VARCHAR} AND CONTRACTYEAR = #{contractyear}
  </update>

    <insert id="insertYLcontract" parameterType="YLcontract_v2015_paa">
      insert into YLCONTRACT_V2015_PAA (CCYEAR, CCID, NAME,
      ACCOUNT_BANK, ACCOUT, ACCOUNT_LOCATION,IDCARD_NO,AUTHFILE_IAMGE,IDCARD_IAMGE1,IDCARD_IAMGE2)
     values (
     #{ccyear,jdbcType=DECIMAL},
     #{ccid,jdbcType=VARCHAR},
     #{name,jdbcType=VARCHAR},
     #{accountBank,jdbcType=VARCHAR},
     #{accout,jdbcType=VARCHAR},
     #{accountLocation,jdbcType=VARCHAR},
     #{idcardNo,jdbcType=VARCHAR},
     #{authfileIamge,jdbcType=VARCHAR},
     #{idcardIamge1,jdbcType=VARCHAR},
     #{idcardIamge2,jdbcType=VARCHAR}
    )
  </insert>

    <update id="updateYLcontract" parameterType="YLcontract_v2015_paa">
        update YLCONTRACT_V2015_PAA
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="accountBank != null">
                ACCOUNT_BANK = #{accountBank,jdbcType=VARCHAR},
            </if>
            <if test="accout != null">
                ACCOUT = #{accout,jdbcType=VARCHAR},
            </if>
            <if test="accountLocation != null">
                ACCOUNT_LOCATION = #{accountLocation,jdbcType=VARCHAR},
            </if>
            <if test="idcardNo != null">
                IDCARD_NO = #{idcardNo,jdbcType=VARCHAR},
            </if>
            <if test="authfileIamge != null">
                AUTHFILE_IAMGE = #{authfileIamge,jdbcType=VARCHAR},
            </if>
            <if test="idcardIamge1 != null">
                IDCARD_IAMGE1 = #{idcardIamge1,jdbcType=VARCHAR},
            </if>
            <if test="idcardIamge2 != null">
                IDCARD_IAMGE2 = #{idcardIamge2,jdbcType=VARCHAR}
            </if>
        </set>
        where CCID = #{ccid} and CCYEAR = #{ccyear}
      </update>


    <select id="getXAreaDistrictName" parameterType="java.util.Map" resultType="string">
        select REGION_NAME from AREA_REGION WHERE REGION_ID =#{REGION_ID,jdbcType=VARCHAR}
    </select>

    <select id="getXDistrict" parameterType="java.util.Map" resultType="string">
        select DISTRICT_NAME from AREA_DISTRICT
        <if test="DISTRICT_ID != null">
        WHERE DISTRICT_ID =#{DISTRICT_ID,jdbcType=VARCHAR}
        </if>
    </select>

    <select id="getAllArea" resultType="Map">
        select area_code from AREA_USER a where a.userId=#{cid}
    </select>

    <select id="getAllStatisticsInfo" resultType="Map">
        select state,count(*) nums from CUSTOMERINFOCARD where 1=1
        <if test="market!=null">
            and market=#{market}
        </if>
        <if test="userCID!=null">
            and CID=#{userCID}
        </if>
        <if test="userCName!=null">
            or CName=#{userCName}
        </if>
        group by state
    </select>

    <update id="businessCheckCustomerInfoCard" parameterType="java.util.Map">
        update CUSTOMERINFOCARD
        <set>
            <if test="STATE!=null">
        STATE = #{STATE} ,
            </if>
            <if test="MEMO!=null">
        MEMO = MEMO || #{MEMO}
            </if>
        </set>
        where CID = #{CID} AND CONTRACTYEAR = (select CONTRACTYEAR from ( select * from CUSTOMERINFOCARD t where t.cid=#{CID} ORDER BY t.contractyear desc nulls last)WHERE ROWNUM =1)
    </update>

    <update id="lawCheckCustomerInfoCardState" parameterType="java.util.Map">
        update CUSTOMERINFOCARD
        <set>
            <if test="STATE!=null">
                STATE = #{STATE} ,
            </if>
            <if test="MEMO!=null">
                MEMO = MEMO || #{MEMO},
            </if>
            <if test="LEGALCHECKED!=null">
                LEGALCHECKED = #{LEGALCHECKED}
            </if>
        </set>
        where CID = #{CID} AND CONTRACTYEAR = (select CONTRACTYEAR from ( select * from CUSTOMERINFOCARD t where t.cid=#{CID} ORDER BY t.contractyear desc nulls last)WHERE ROWNUM =1)
    </update>

    <select id="getAllCustomerInfoCardState" resultType="Map">
        select STATE,count(STATE) from  CUSTOMERINFOCARD where CONTRACTYEAR = #{CONTRACTYEAR} group by STATE
    </select>

    <select id="getAllCustomerInfoCardArea" resultType="Map">
        select MARKETNAME from CUSTOMERINFOCARD where CONTRACTYEAR = #{CONTRACTYEAR} group by MARKETNAME
    </select>

    <select id="getCustomerInfoCardStateByArea" resultType="Map">
        select MARKETNAME,MARKETMANAGERNAME,STATE,count(STATE) from  CUSTOMERINFOCARD where CONTRACTYEAR = #{CONTRACTYEAR} group by MARKETNAME,MARKETMANAGERNAME,STATE
    </select>

    <select id="getCustomerInfoCardLeagalChecked" resultMap="CustomerInfoCardMap">
        select * from(
        select rownum rm, c.*  from
        (
        select * from CUSTOMERINFOCARD
        <if test="LEGALCHECKED!=null">
        where LEGALCHECKED = #{LEGALCHECKED}
        </if>
        ) c)tm
        <if test="start!=null">
            where rm &gt;= #{start} and rm &lt;= #{number}
        </if>
    </select>

    <select id="getArea_Cmanager" resultType="Map">
        select c.area_name,c.area_code area,d.district_name,d.district_id from
             (select d.area from area_owner d where d.owner=#{cid} group by d.area) o,area_code c,area_district d where
        c.area_belong=o.area and c.area_code=d.area_code
    </select>

    <select id="getArea_Mmanager" resultType="Map">
        select o.area,c.area_name,d.district_id,d.district_name from
           (select d.area from area_owner d where d.owner=#{cid} group by d.area) o,area_district d,area_code c
        where o.area=d.area_code and c.area_code=o.area
    </select>

    <select id="gatArea_All" resultType="Map">
        select o.area,c.area_name,d.district_id,d.district_name from
           (select d.area from area_owner d group by d.area ) o,area_district d,area_code c
        where o.area=d.area_code and c.area_code=o.area
    </select>

    <select id="getArea_Smanager" resultType="Map">
        select t.district_name,t.district_id  from
          AREA_DISTRICT t,(select d.area from area_owner d where d.owner=#{cid} group by d.area) o
        where t.district_id=o.area
    </select>

    <select id="getYlcstate" resultType="String">
        select state from ylcontractentry y where y.cid=#{cid}
        <if test="year!=null">
            and y.cyear=#{year}
        </if>

    </select>

    <select id="getCustomerinfo_Cmanager" resultType="Map">
        select
        *

        from(
        select rownum rm, l.*  from

        ( select u.* from
        ( select c.area_code area,d.district_id from
        (select d.area from area_owner d where d.owner=#{cid} group by d.area) o,area_code c,area_district d where
        c.area_belong=o.area and c.area_code=d.area_code)g,(  select  NVL(y.state,'SALEMANFILLING') YLCSTATE,t.* from CUSTOMERINFOCARD t,YLCONTRACTENTRY y where t.cid=y.cid(+) and t.contractyear=y.cyear(+)) u
        where
        g.area=u.market and g.district_id=u.submarket
        order by decode(u.state,'BUSINESSCHECKING',1,'APPROVED',2,'CUSTOMERPORCESSING2',3,'CUSTOMERPORCESSING',4), decode(u.ylcstate,'SALEMANFILLING',1)) l

        where 1=1
        <if test="year!=null">
            and contractyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>



        <if test="state!=null">
            and state=#{state}
        </if>
        <if test="ylcstate!=null">
            and ylcstate=#{ylcstate}
        </if>

        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


        ) tm      where rm &gt;= #{start} and rm &lt;= #{number }
    </select>

    <select id="getCustomerinfo_Mmanager" resultType="Map">
        select
        *

        from(
        select rownum rm, l.*  from

        (select u.* from
        ( select o.area,c.area_name,d.district_id,d.district_name from
        (select d.area from area_owner d where d.owner=#{cid} group by d.area) o,area_district d,area_code c
        where o.area=d.area_code and c.area_code=o.area)g,(  select  NVL(y.state,'SALEMANFILLING') YLCSTATE,t.* from CUSTOMERINFOCARD t,YLCONTRACTENTRY y where t.cid=y.cid(+) and t.contractyear=y.cyear(+)) u
        where
        g.area=u.market and g.district_id=u.submarket
        order by decode(u.state,'BUSINESSCHECKING',1,'APPROVED',2,'CUSTOMERPORCESSING2',3,'CUSTOMERPORCESSING',4), decode(u.ylcstate,'SALEMANFILLING',1)) l

        where 1=1
        <if test="year!=null">
            and contractyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>

        <if test="ylcstate!=null">
            and ylcstate=#{ylcstate}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>

        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


        ) tm      where rm &gt;= #{start} and rm &lt;= #{number }
    </select>

    <select id="getCustomerinfo_Smanager" resultType="Map">
        select
        *

        from(
        select rownum rm, l.*  from

        (select u.* from
        ( select d.area from area_owner d where d.owner=#{cid} group by d.area)g,(  select  NVL(y.state,'SALEMANFILLING') YLCSTATE,t.* from CUSTOMERINFOCARD t,YLCONTRACTENTRY y where t.cid=y.cid(+) and t.contractyear=y.cyear(+)) u
        where
        g.area=u.submarket
        order by decode(u.state,'BUSINESSCHECKING',1,'APPROVED',2,'CUSTOMERPORCESSING2',3,'CUSTOMERPORCESSING',4), decode(u.ylcstate,'SALEMANFILLING',1)) l

        where 1=1
        <if test="year!=null">
            and contractyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>

        <if test="ylcstate!=null">
            and ylcstate=#{ylcstate}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>

        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


        ) tm      where rm &gt;= #{start} and rm &lt;= #{number }
    </select>

    <select id="getAllCustomerinfo" resultType="Map">
        select
        *

        from(
        select rownum rm, l.*  from

        (select u.* from
        (  select  NVL(y.state,'SALEMANFILLING') YLCSTATE,t.* from CUSTOMERINFOCARD t,YLCONTRACTENTRY y where t.cid=y.cid(+) and t.contractyear=y.cyear(+)) u
        order by decode(u.state,'BIILDEPCHECKING',1,'APPROVED',2,'CUSTOMERPORCESSING2',3,'CUSTOMERPORCESSING',4), decode(u.ylcstate,'SALEMANFILLING',1)) l

        where 1=1
        <if test="year!=null">
            and contractyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        <if test="ylcstate!=null">
            and ylcstate=#{ylcstate}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>
        <if test="legalchecked!=null">
            and legalchecked=#{legalchecked}
        </if>

        <if test="find!=null">
            and l.cid like  '%'||#{find}||'%' or  l.CNAME like  '%'||#{find}||'%'
        </if>


        ) tm      where rm &gt;= #{start} and rm &lt;= #{number }
    </select>

    <select id="count_Cmanager" resultType="int">
        select count (*) from


        (select u.* from
        ( select c.area_code area,d.district_id from
        (select d.area from area_owner d where d.owner=#{cid} group by d.area) o,area_code c,area_district d where
        c.area_belong=o.area and c.area_code=d.area_code)g,(  select  NVL(y.state,'SALEMANFILLING') YLCSTATE,t.* from CUSTOMERINFOCARD t,YLCONTRACTENTRY y where t.cid=y.cid(+) and t.contractyear=y.cyear(+)) u
        where
        g.area=u.market and g.district_id=u.submarket )f
        where 1=1
        <if test="year!=null">
            and contractyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        <if test="ylcstate!=null">
            and ylcstate=#{ylcstate}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>

        <if test="find!=null">
            and f.cid like  '%'||#{find}||'%' or  f.CNAME like  '%'||#{find}||'%'
        </if>

    </select>

    <select id="count_Mmanager" resultType="int">
        select count (*) from


        (select u.* from
        ( select o.area,c.area_name,d.district_id,d.district_name from
        (select d.area from area_owner d where d.owner=#{cid} group by d.area) o,area_district d,area_code c
        where o.area=d.area_code and c.area_code=o.area)g,(  select  NVL(y.state,'SALEMANFILLING') YLCSTATE,t.* from CUSTOMERINFOCARD t,YLCONTRACTENTRY y where t.cid=y.cid(+) and t.contractyear=y.cyear(+)) u
        where
        g.area=u.market and g.district_id=u.submarket )f
        where 1=1
        <if test="year!=null">
            and contractyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        <if test="ylcstate!=null">
            and ylcstate=#{ylcstate}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>

        <if test="find!=null">
            and f.cid like  '%'||#{find}||'%' or  f.CNAME like  '%'||#{find}||'%'
        </if>

    </select>

    <select id="count_Smanager" resultType="int">
        select count (*) from


        ( select u.* from
        ( select d.area from area_owner d where d.owner=#{cid} group by d.area)g,(  select  NVL(y.state,'SALEMANFILLING') YLCSTATE,t.* from CUSTOMERINFOCARD t,YLCONTRACTENTRY y where t.cid=y.cid(+) and t.contractyear=y.cyear(+)) u
        where
        g.area=u.submarket )f
        where 1=1
        <if test="year!=null">
            and contractyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        <if test="ylcstate!=null">
            and ylcstate=#{ylcstate}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>

        <if test="find!=null">
            and f.cid like  '%'||#{find}||'%' or  f.CNAME like  '%'||#{find}||'%'
        </if>

    </select>

    <select id="countAll" resultType="int">
        select count (*) from


        (select u.* from
        (  select  NVL(y.state,'SALEMANFILLING') YLCSTATE,t.* from CUSTOMERINFOCARD t,YLCONTRACTENTRY y where t.cid=y.cid(+) and t.contractyear=y.cyear(+)) u
        )f
        where 1=1
        <if test="year!=null">
            and contractyear=#{year}
        </if>
        <if test="area_1!=null">
            and MARKETNAME=#{area_1}
        </if>
        <if test="area_2!=null">
            and SUBMARKETNAME=#{area_2}
        </if>
        <if test="ylcstate!=null">
            and ylcstate=#{ylcstate}
        </if>
        <if test="state!=null">
            and state=#{state}
        </if>
        <if test="legalchecked!=null">
            and legalchecked=#{legalchecked}
        </if>

        <if test="find!=null">
            and f.cid like  '%'||#{find}||'%' or  f.CNAME like  '%'||#{find}||'%'
        </if>

    </select>

</mapper>
